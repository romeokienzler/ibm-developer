[{
		"id": "ad78088579c52ee3",
		"type": "tab",
		"label": "Flow 1",
		"disabled": false,
		"info": "",
		"env": []
	},
	{
		"id": "9fb1405e1fe3ea0e",
		"type": "inject",
		"z": "ad78088579c52ee3",
		"name": "Fluid Simulator",
		"repeat": "1",
		"crontab": "",
		"once": false,
		"topic": "",
		"payload": "{ \"d\": {\"count\":0, \"hardness\": 61, \"temperature\": 50, \"flowrate\": 11, \"fluidlevel\": \"acceptable\" } }",
		"payloadType": "json",
		"x": 300,
		"y": 280,
		"wires": [
			[
				"07690ce70a019231"
			]
		]
	},
	{
		"id": "937e7370073b8a80",
		"type": "inject",
		"z": "ad78088579c52ee3",
		"name": "Voltage Sensor Simulator",
		"repeat": "3",
		"crontab": "",
		"once": false,
		"topic": "",
		"payload": "{ \"d\": { \"voltage\": 240, \"frequency\": 50 } }",
		"payloadType": "json",
		"x": 279.66668701171875,
		"y": 355.1000061035156,
		"wires": [
			[
				"550d3f196065167d"
			]
		]
	},
	{
		"id": "23047afea59738b7",
		"type": "inject",
		"z": "ad78088579c52ee3",
		"name": "Mechanical Sensor Simulator",
		"repeat": "5",
		"crontab": "",
		"once": false,
		"topic": "",
		"payload": "{ \"d\": { \"speed\": 1200 } }",
		"payloadType": "json",
		"x": 287.66668701171875,
		"y": 439.1000061035156,
		"wires": [
			[
				"efbf266e080526fa"
			]
		]
	},
	{
		"id": "07690ce70a019231",
		"type": "function",
		"z": "ad78088579c52ee3",
		"name": "Fluid data",
		"func": "// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\nvar hardness = context.get('hardness')||0;\nvar randomness = context.get('randomness')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.payload.d.count = count;\nif(count % 300 == 0) {\n    context.set('randomness',1);\n    context.set('hardness', 83);\n} else if(count % 20 == 0) {\n    context.set('randomness',0);\n} else if(count % 121 == 0) {\n    context.set('randomness',2);\n    context.set('hardness', 100);\n}\n\nif(randomness == 0) {\n    // no variation\n    msg.payload.d.hardness = Math.floor(Math.random() * (80 - 70 + 1) + 70);\n} else if(randomness == 1) {\n    // gradually increase\n    msg.payload.d.hardness = hardness + 1;\n    context.set('hardness', (hardness + 1));\n} else {\n    msg.payload.d.hardness = hardness + 5;\n    context.set('hardness', (hardness + 5));\n}\nmsg.payload.d.temperature = Math.floor(Math.random() * (100 - 80 + 1) + 80);\n\n//msg.payload = JSON.stringify(msg.payload)\nmsg.eventOrCommandType = \"fluid\"\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 521.5500183105469,
		"y": 279.48333740234375,
		"wires": [
			[
				"31d07c95ea7d3ade"
			]
		]
	},
	{
		"id": "550d3f196065167d",
		"type": "function",
		"z": "ad78088579c52ee3",
		"name": "Voltage data",
		"func": "// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.payload.d.count = count;\nif(count % 100 <= 90) {\n    msg.payload.d.voltage = Math.floor(Math.random() * (240 - 220) + 220);\n} else {\n    msg.payload.d.voltage = Math.floor(Math.random() * (260 - 240) + 240);\n}\nmsg.payload.d.frequency = Math.floor(Math.random() * (80 - 60 + 1) + 60);\n//msg.payload = JSON.stringify(msg.payload)\nmsg.eventOrCommandType = \"voltage\"\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 498.550048828125,
		"y": 330.98333740234375,
		"wires": [
			[
				"31d07c95ea7d3ade"
			]
		]
	},
	{
		"id": "efbf266e080526fa",
		"type": "function",
		"z": "ad78088579c52ee3",
		"name": "Drum data",
		"func": "// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.payload.d.count = count;\nif(count % 100 <= 90) {\n    // No variation - within the safe limit\n    msg.payload.d.speed = Math.floor(Math.random() * (1100 - 1000) + 1000);    \n} else {\n    msg.payload.d.speed = Math.floor(Math.random() * (1300 - 1150) + 1150);        \n}\n\n\n//msg.payload = JSON.stringify(msg.payload)\nmsg.eventOrCommandType = \"drum\"\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 530.5500183105469,
		"y": 438.98333740234375,
		"wires": [
			[
				"31d07c95ea7d3ade"
			]
		]
	},
	{
		"id": "31d07c95ea7d3ade",
		"type": "function",
		"z": "ad78088579c52ee3",
		"name": "",
		"func": "msg.payload.d.ts = new Date().getTime();\nreturn msg;",
		"outputs": 1,
		"noerr": 0,
		"x": 706.5,
		"y": 355.23333740234375,
		"wires": [
			[
				"5d38f28ac570c5d4"
			]
		]
	},
	{
		"id": "5d38f28ac570c5d4",
		"type": "debug",
		"z": "ad78088579c52ee3",
		"name": "",
		"active": false,
		"console": "false",
		"complete": "payload",
		"x": 790.5,
		"y": 433.98333740234375,
		"wires": []
	}
]
